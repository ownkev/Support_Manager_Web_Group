@page "{id:int}"
@model Support_Manager_Web_Group.Pages.Tickets.DetailsModel
@{
    ViewData["Title"] = $"Ticket #{Model.Ticket?.TicketID} Details";
}

@if (Model.Ticket == null)
{
    <h1 class="text-danger">Ticket Not Found</h1>
    <p>The requested ticket could not be found or you do not have permission.</p>
    <a asp-page="./Index" class="btn btn-secondary mt-3">Back to List</a>
}
else
{
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1>Details for Ticket #@Model.Ticket.TicketID</h1>
        <div>
            @if (Model.CanPerformActions)
            { // Show Edit button only if user is allowed
                <a asp-page="./Edit" asp-route-id="@Model.Ticket.TicketID" class="btn btn-primary me-2"><i class="fas fa-edit"></i> Edit</a>
            }
            <a asp-page="./Index" class="btn btn-secondary"><i class="fas fa-list"></i> Back to List</a>
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-md-7">
            <h4>@Html.DisplayFor(model => model.Ticket.Title)</h4>
            <dl class="row details-list">
                <dt class="col-sm-4">Status</dt>
                <dd class="col-sm-8"><span class="badge @GetStatusBadgeClass(Model.Ticket.Status?.StatusName)">@(Model.Ticket.Status?.StatusName ?? "N/A")</span></dd>
                <dt class="col-sm-4">Priority</dt>
                <dd class="col-sm-8"><span class="badge @GetPriorityBadgeClass(Model.Ticket.Priority?.PriorityName)">@(Model.Ticket.Priority?.PriorityName ?? "N/A")</span></dd>
                <dt class="col-sm-4">Category</dt>
                <dd class="col-sm-8">@(Model.Ticket.Category ?? "N/A")</dd>
                <dt class="col-sm-12 mt-3">Description</dt>
                <dd class="col-sm-12"><pre class="description-box">@Html.DisplayFor(model => model.Ticket.Description)</pre></dd>
            </dl>
        </div>
        <div class="col-md-5">
            <h5>Details</h5>
            <dl class="row details-list">
                <dt class="col-sm-5">Submitted By</dt>
                <dd class="col-sm-7">@(Model.Ticket.Submitter?.FullName ?? "N/A")</dd>
                <dt class="col-sm-5">Date Submitted</dt>
                <dd class="col-sm-7">@Model.Ticket.DateSubmitted.ToString("f")</dd>
                <dt class="col-sm-5">Assigned To</dt>
                <dd class="col-sm-7">@(Model.Ticket.Assignee?.FullName ?? "[Unassigned]")</dd>
                <dt class="col-sm-5">Date Resolved</dt>
                <dd class="col-sm-7">@(Model.Ticket.DateResolved?.ToString("f") ?? "N/A")</dd>
            </dl>
        </div>
    </div>
}

@functions {
    private string GetStatusBadgeClass(string statusName) { return statusName switch { "Open" => "bg-primary text-white", "Assigned" => "bg-info text-dark", "In Progress" => "bg-warning text-dark", "Pending User Response" => "bg-secondary text-white", "Resolved" => "bg-success text-white", "Closed" => "bg-dark text-white", _ => "bg-light text-dark" }; }
    private string GetPriorityBadgeClass(string priorityName) { return priorityName switch { "Low" => "bg-success text-white", "Medium" => "bg-warning text-dark", "High" => "bg-danger text-white", "Critical" => "bg-danger border border-dark fw-bold", _ => "bg-light text-dark" }; }
}